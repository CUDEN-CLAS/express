<?php

include_once 'cu_redirect.features.inc';

/**
 * Adds a redirect if none exists.
 */
function cu_redirect_add_redirect($source = NULL, $destination = NULL) {
  if ($source == NULL || $destination == NULL) {
    return;
  }

  // Check to see if redirect exists.
  $query = db_select('redirect', 'r');
  $query->addField('r', 'source');
  $query->condition('r.source', $source);
  $redirect = $query->execute()->fetchCol();

  // Make redirect if none exists.
  if (empty($redirect)) {
    $redirect = new stdClass();
    redirect_object_prepare($redirect);
    $redirect->source = $source;
    $redirect->redirect = $destination;
    // Always make redirects from UID 1.
    $redirect->uid = 1;
    redirect_save($redirect);
  }
}

/**
 * Implements hook_cron().
 *
 * Delete any redirects created by UID 1 after 30 days if they haven't been
 * accessed.
 *
 * @return mixed
 * @throws \Exception
 */
function cu_redirect_cron() {

  // If site hasn't launched, don't delete redirects.
  if (variable_get('cu_inventory_status', NULL) != 'launched') {
    return;
  }

  // Get all redirects created by UID 1 that haven't been accessed in 30 days.
  $interval = 2592000;
  $query = db_select('redirect');
  $query->addField('redirect', 'rid');
  $query->condition('uid', 1, '=');
  $query->condition('access', REQUEST_TIME - $interval, '<');
  $query->addTag('redirect_purge');
  $rids = $query->execute()->fetchCol();

  // Delete any redirects that are returned.
  if (count($rids)) {
    // Since this function is in a module file, no include is necessary.
    redirect_delete_multiple($rids);
    watchdog('cu_redirect', format_plural(count($rids), 'Removed 1 inactive redirect from the database.', 'Removed @count inactive redirects from the database.'));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function cu_redirect_form_redirect_list_form_alter(&$form, &$form_state, $form_id) {
  $form['unaccessed_links'] = array(
    '#type' => 'fieldset',
    '#title' => t('Remove Stale Links'),
    '#prefix' => '<div class="container-inline">',
    '#suffix' => '</div>',
    '#weight' => -1,
  );

  $form['unaccessed_links']['text'] = array(
    '#type' => 'markup',
    '#markup' => '<p>Some redirects are never accessed and clutter up this reports page. You can clear those stale redirects here.</p>',
  );

  $form['unaccessed_links']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Clear Stale Links',
    '#validate' => array('cu_redirect_unaccessed_links_validate'),
    '#submit' => array('cu_redirect_unaccessed_links_submit'),
  );
}

/**
 * Validation handler for clear stale links submit button.
 */
function cu_redirect_unaccessed_links_validate($form, &$form_state) {

}

/**
 * Submit handler for clear stale links submit button.
 */
function cu_redirect_unaccessed_links_submit($form, &$form_state) {

  $query = db_select('redirect');
  $query->addField('redirect', 'rid');
  //$query->condition('uid', 1, '=');
  $query->condition('access', 0, '=');
  $query->addTag('redirect_purge');
  $rids = $query->execute()->fetchCol();

  // Delete any redirects that are returned.
  if (count($rids)) {
    // Since this function is in a module file, no include is necessary.
    redirect_delete_multiple($rids);
    watchdog('cu_redirect', format_plural(count($rids), 'Removed 1 inactive redirect from the database.', 'Removed @count inactive redirects from the database.'));
    drupal_set_message('Redirects that were never accessed have been cleared.');
  } else {
    drupal_set_message('There are no redirects that were never accessed. No redirects have been removed.', 'warning');
  }
}
