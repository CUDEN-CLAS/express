<?php

/**
 * Custom code related to sitemap functionality.
 * @file
 */

/**
 * Implements hook_menu().
 */
function cu_sitemap_menu() {
  $items = array();

  $items['admin/settings/seo/xmlsitemap'] = array(
    'title' => 'Sitemap',
    'description' => 'Configure sitemap settings.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_goto',
    'page arguments' => array('admin/config/search/xmlsitemap'),
    'access arguments' => array('administer express settings'),
    'weight' => 26,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 *
 * @param $items
 */
function cu_sitemap_menu_alter(&$items) {
  // Hide advanced settings from non-developers.
  $items['admin/config/search/xmlsitemap/settings']['access callback'] = 'cu_sitemap_access';
  $items['admin/config/search/xmlsitemap/add']['access callback'] = 'cu_sitemap_access';
}

/**
 * Access check for sitemap advanced settings.
 *
 * @return bool
 */
function cu_sitemap_access() {
  global $user;
  if (!in_array('developer', $user->roles) && $user->uid != 1) {
    return FALSE;
  } else {
    return TRUE;
  }
}

/**
 * Implements hook_form_alter().
 */
function cu_sitemap_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'xmlsitemap_sitemap_list_form') {
    global $user;
    foreach ($form['sitemaps']['#options'] as $key => $sitemap) {
      if (!in_array('developer', $user->roles) && $user->uid != 1) {
        unset($form['sitemaps']['#options'][$key]['operations']['data']['#links']['delete']);
      }
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function cu_sitemap_page_alter(&$vars) {
  //dpm($vars);
}
