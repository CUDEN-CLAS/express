<?php

define('CUFA_FONTAWESOME_LIBRARY', 'fontawesome');
define('CUFA_FONTAWESOME_NAME', 'Font Awesome');
define('CUFA_FONTAWESOME_URL', 'http://fontawesome.io');
define('CUFA_FONTAWESOME_ICONS_URL', 'scss/_icons.scss');
define('CUFA_FONTAWESOME_DOWNLOAD_URL', 'https://github.com/FortAwesome/Font-Awesome/archive/v4.6.3.zip');
define('CUFA_FONTAWESOME_PREFIX', 'fa');

/**
 * Implements hook_libraries_info().
 */
function cu_font_awesome_libraries_info() {
  $libraries[CUFA_FONTAWESOME_LIBRARY] = array(
    'name' => CUFA_FONTAWESOME_NAME,
    'vendor url' => CUFA_FONTAWESOME_URL,
    'download url' => CUFA_FONTAWESOME_DOWNLOAD_URL,
    'version arguments' => array(
      'file' => 'css/font-awesome.css',
      'pattern' => '/((?:\d+\.?){2,3})/',
      'lines' => 10,
      'cols' => 14,
    ),
    'files' => array(
      'css' => array(
        'css/font-awesome.min.css',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_theme_page_alter().
 */
function cu_font_awesome_page_alter(&$page) {
  $library = libraries_load(CUFA_FONTAWESOME_LIBRARY);
  if (!$library['loaded']) {
    drupal_set_message($library['error message'] . t('Please make sure that '
      . 'fontawesome was download & extracted at sites/all/libraries/fontawesome directory.'
      . 'Please check README.txt for more details.'),
      'warning');
  }
}

function cu_font_awesome_icon_list() {
  $library = libraries_load(CUFA_FONTAWESOME_LIBRARY);
  if (!$library['loaded']) {
    drupal_set_message($library['error message'] . t('Please make sure that '
      . 'fontawesome was download & extracted at sites/all/libraries/fontawesome directory.'
      . 'Please check README.txt for more details.'),
      'warning');
  }
  else {
    $icons_file = file_get_contents($library['library path'] . '/' . CUFA_FONTAWESOME_ICONS_URL);
    $icons = array();
    $icons_styles = explode("\n", $icons_file);
    $icon_query = 'content: $fa-var-';
    foreach ($icons_styles as $icon_style) {
      if (strpos($icon_style, $icon_query) !== FALSE) {
        $icon_name = _cu_font_awesome_regex($icon_style);
        $icons['fa-' . $icon_name] = '<i class="fa fa-' . $icon_name .'" aria-hidden="true"></i> ' . $icon_name;
      }
    }
    ksort($icons);
    return $icons;
  }
}

function _cu_font_awesome_regex($string) {
 // .#{$fa-css-prefix}-envelope-o:before { content: $fa-var-envelope-o; }
 $prefix = ' $fa-var-';
 $parts = explode(':', $string);
 return substr($parts[2], strlen($prefix), -3);
}
