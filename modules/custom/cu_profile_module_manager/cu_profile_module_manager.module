<?php

/**
 * @file
 * Alters grouping in admin/modules for CU specific sites.
 */

/**
 * Implements hook_menu().
 */
function cu_profile_module_manager_menu() {

  $items['admin/settings/bundles/list/atlas/%/confirm'] = array(
    'title' => 'Confirm Atlas code request',
    'type' => MENU_CALLBACK,
    'description' => 'Atlas confirmation.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_profile_module_manager_atlas_request_form'),
    'access arguments' => array('administer modules'),
  );

  $items['admin/settings/bundles/list/addon'] = array(
    'title' => 'Addon',
    'type' => MENU_LOCAL_TASK,
    'description' => 'Add and request additional bundles',
    'page callback' => 'cu_profile_module_manager_addon_page',
    'page arguments' => array(1),
    'access arguments' => array('administer modules'),
    'weight' => 10,
  );

  $items['admin/settings/bundles/list/request'] = array(
    'title' => 'Request',
    'type' => MENU_LOCAL_TASK,
    'description' => 'Add and request additional bundles',
    'page callback' => 'cu_profile_module_manager_request_page',
    'page arguments' => array(1),
    'access arguments' => array('administer modules'),
    'weight' => 20,
  );

  $items['admin/settings/bundles/list/beta'] = array(
    'title' => 'Beta',
    'type' => MENU_LOCAL_TASK,
    'description' => 'Add and request additional bundles',
    'page callback' => 'cu_profile_module_manager_beta_page',
    'page arguments' => array(1),
    'access arguments' => array('administer modules'),
    'weight' => 99,
  );

  return $items;
}

/**
 * Implements hook_form().
 */
function cu_profile_module_manager_atlas_request_form($form, &$form_state) {
  $form = array();
  preg_match('/^[a-zA-Z0-9_]*/', arg(5), $module);
  $package = _get_code_options($type = 'module', $name = $module[0]);

  $form['atlas_asset'] = array(
    '#title' => t('Atlas asset being requested.'),
    '#markup' => t('Are you sure you want to add this bundle? <br><strong>') . arg(5) . '</strong>',
  );
  $form['atlas_package_to_add'] = array(
    '#type' => 'hidden',
    '#value' => array(
      key($package) => key($package),
    ),
  );

  $form['#validate'][] = 'cu_profile_module_manager_validate_atlas_request';
  $form['#submit'][] = 'cu_profile_module_manager_atlas_request_submit';

  return system_settings_form($form);
}

/**
 * Implements hook_validate_form().
 */
function cu_profile_module_manager_validate_atlas_request($form, &$form_state) {
  $atlas_id = variable_get('atlas_id', FALSE);
  $site_array = atlas_api_request('sites', $atlas_id);
  if (variable_get('atlas_path') == $site_array['sid'] && $site_array['pool'] != 'poolb-homepage' && (variable_get('atlas_status') == 'launching' || variable_get('atlas_status') == 'launched')) {
    form_set_error('atlas_path', t('You cannot launch a site at it\'s \'p1\' URL.'));
  }
  if (variable_get('atlas_status') == 'available') {
    form_set_error('atlas_status', t('You cannot make any changes to a site while it is in the \'Available\' state.'));
  }
}

/**
 * Submit function for cu_profile_module_manager_atlas_request_form().
 */
function cu_profile_module_manager_atlas_request_submit($form, &$form_state) {
  $atlas_id = variable_get('atlas_id', NULL);
  $site_array = atlas_api_request('sites', $atlas_id);

  // Setup empty array for data that is changing.
  $request_data = array();

  // If the atlas form has been saved and set, then merge our arrays. Otherwise, override the non-existent array.
  if (isset($form_state['values']['atlas_package_to_add']) && isset($site_array['code']['package'])) {
    $package_array = $site_array['code']['package'];
    $add_package = $form_state['values']['atlas_package_to_add'];
    $all_together_now = array_merge($package_array, $add_package);
    $request_data['code']['package'] = $all_together_now;
  } if (isset($form_state['values']['atlas_package_to_add']) && !isset($site_array['code']['package'])) {
    $add_package = $form_state['values']['atlas_package_to_add'];
    $request_data['code']['package'] = $add_package;
  }

  // We only want to send a patch if something has changed.
  if (!empty($request_data)) {
    // Set the etag from the form.
    $request_data['_etag'] = $site_array['_etag'];
    atlas_api_request('sites', $atlas_id, 'PATCH', $request_data);
    $form_state['redirect'] = 'admin/settings/bundles/list';
  }
  else {
    drupal_set_message(t('No data was changed.'), 'warning');
  }
}

/**
 * @param $package
 *
 * Check to see if the package has a label and return it.
 */
function _prepared_atlas_package($key, $item) {
  // Atlas code api call.
  $code_array = atlas_api_request('code', $key);

  if (isset($code_array) && !empty($code_array['meta']['label']) && $item == 'label') {
    $code_label = $code_array['meta']['label'];
    return $code_label;
  }

  if (isset($code_array) && !empty($code_array['meta']['tag']) && $item == 'tag') {
    $code_tag = $code_array['meta']['tag'];
    return $code_tag;
  }

  if (isset($code_array) && !empty($code_array['meta']['name']) && $item == 'name') {
    $code_name = $code_array['meta']['name'];
    return $code_name;
  }
}

/**
 * @return array
 */
function cu_profile_module_manager_addon_page() {
  /* Variables and whatnot--no form elements. */
  global $base_path;

  $atlas_id = variable_get('atlas_id', NULL);
  $site_array = atlas_api_request('sites', $atlas_id);

  drupal_add_css(drupal_get_path('module', 'cu_profile_module_manager') . '/css/cu-profile-module-manager.css', array('group' => CSS_DEFAULT));

  // Get code packages from atlas.
  $packages = _get_code_options($type = 'module', $name = NULL);
  $output = array(
    'description' => array(
      '#type' => 'markup',
      '#markup' => '<p>These are bundles that can be added at any time by site owners. Once you add the bundle,
                    you will receive an email when it has finished downloading. Once downloaded, the bundle will
                    be available to enable.</p><p>Don\'t see your bundle available in Core yet? It takes a few 
                    minutes to download. If it takes longer than 15 minutes, contact your site owner for help.</p>',
    ),
  );

  $site_array = atlas_api_request('sites', $atlas_id);
  if (isset($site_array['code']['package'])) {
    $packages_array = $site_array['code']['package'];
  } else {
    $packages_array = array();
  }

  foreach ($packages as $key => $package) {
    $tag = _prepared_atlas_package($key, 'tag');
    $name = _prepared_atlas_package($key, 'name');
    $label = _prepared_atlas_package($key, 'label');

    $enabled = module_exists($name) ? 1 : 0;

    if (isset($tag) && ($tag[0] == 'public_bundles') && !in_array($key, $packages_array)) {
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><a href="' . $base_path . 'admin/settings/bundles/list/atlas/' . $name . '/confirm" id="' . $key . '" class="pmm-actions btn btn-primary"><i class="fa fa-plus-circle"></i> Add bundle</a></div>',
        ),
      );
    }

    if (isset($tag) && ($tag[0] == 'public_bundles') && in_array($key, $packages_array) && $enabled == FALSE) {
      // Is NOT enabled.
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><a href="' . $base_path . 'admin/settings/bundles/list/confirm/' . $name . '" id="' . $key . '" class="pmm-actions btn btn-info"><i class="fa fa-plus-circle"></i> Enable</a></div>',
        ),
      );
    }

    if (isset($tag) && ($tag[0] == 'public_bundles') && in_array($key, $packages_array) && $enabled == TRUE) {
      // Is enabled.
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle bundle-ready"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><span class="pmm-actions btn btn-info" disabled ><i class="fa fa-check-circle"></i> Ready to use</span></div>',
        ),
      );
    }
  }
  return $output;
}
/**
 * @return array
 */
function cu_profile_module_manager_request_page() {
  /* Variables and whatnot--no form elements. */
  global $base_path;

  $atlas_id = variable_get('atlas_id', NULL);
  $site_array = atlas_api_request('sites', $atlas_id);
  if (isset($site_array['code']['package'])) {
    $packages_array = $site_array['code']['package'];
  } else {
    $packages_array = array();
  }

  drupal_add_css(drupal_get_path('module', 'cu_profile_module_manager') . '/css/cu-profile-module-manager.css', array('group' => CSS_DEFAULT));

  // Get code packages from atlas.
  $packages = _get_code_options($type = 'module', $name = NULL);
  $output = array(
    'description' => array(
      '#type' => 'markup',
      '#markup' => '<p>These are bundles that must be requested from <a href="http://colorado.edu/webcentral">Webcentral</a> by site owners. Once you add the bundle,
                    you will receive an email when it has finished downloading. Once downloaded, the bundle will
                    be available to enable on this page.</p>',
    ),
  );

  foreach ($packages as $key => $package) {
    $tag = _prepared_atlas_package($key, 'tag');
    $name = _prepared_atlas_package($key, 'name');
    $label = _prepared_atlas_package($key, 'label');

    $enabled = module_exists($name) ? 1 : 0;

    if (isset($tag) && ($tag[0] == 'approval_required_bundles') && !in_array($key, $packages_array)) {
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><a href="' . $base_path . 'admin/settings/bundles/list/atlas/' . $name . '/confirm" id="' . $key . '" class="pmm-actions btn btn-primary"><i class="fa fa-plus-circle"></i> Add bundle</a></div>',
        ),
      );
    }

    if (isset($tag) && ($tag[0] == 'approval_required_bundles') && in_array($key, $packages_array) && $enabled == FALSE) {
      // Is NOT enabled.
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><a href="' . $base_path . 'admin/settings/bundles/list/confirm/' . $name . '" id="' . $key . '" class="pmm-actions btn btn-info"><i class="fa fa-plus-circle"></i> Enable</a></div>',
        ),
      );
    }

    if (isset($tag) && ($tag[0] == 'approval_required_bundles') && in_array($key, $packages_array) && $enabled == TRUE) {
      // Is enabled.
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle bundle-ready"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><span class="pmm-actions btn btn-info" disabled ><i class="fa fa-check-circle"></i> Ready to use</span></div>',
        ),
      );
    }
  }
  return $output;
}

/**
 * @return array
 */
function cu_profile_module_manager_beta_page() {
  /* Variables and whatnot--no form elements. */
  global $base_path;

  $atlas_id = variable_get('atlas_id', NULL);
  $site_array = atlas_api_request('sites', $atlas_id);
  if (isset($site_array['code']['package'])) {
    $packages_array = $site_array['code']['package'];
  } else {
    $packages_array = array();
  }

  drupal_add_css(drupal_get_path('module', 'cu_profile_module_manager') . '/css/cu-profile-module-manager.css', array('group' => CSS_DEFAULT));

  // Get code packages from atlas.
  $packages = _get_code_options($type = 'module', $name = NULL);
  $output = array(
    'description' => array(
      '#type' => 'markup',
      '#markup' => '<p>These are beta bundles--even we don\'t know what they are exactly.</p>',
    ),
  );

  foreach ($packages as $key => $package) {
    $tag = _prepared_atlas_package($key, 'tag');
    $name = _prepared_atlas_package($key, 'name');
    $label = _prepared_atlas_package($key, 'label');

    $enabled = module_exists($name) ? 1 : 0;

    if (isset($tag) && ($tag[0] == 'beta_bundles') && !in_array($key, $packages_array)) {
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><a href="' . $base_path . 'admin/settings/bundles/list/atlas/' . $name . '/confirm" id="' . $key . '" class="pmm-actions btn btn-primary"><i class="fa fa-plus-circle"></i> Add bundle</a></div>',
        ),
      );
    }

    if (isset($tag) && ($tag[0] == 'beta_bundles') && in_array($key, $packages_array) && $enabled == FALSE) {
      // Is NOT enabled.
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><a href="' . $base_path . 'admin/settings/bundles/list/confirm/' . $name . '" id="' . $key . '" class="pmm-actions btn btn-info"><i class="fa fa-plus-circle"></i> Enable</a></div>',
        ),
      );
    }

    if (isset($tag) && ($tag[0] == 'beta_bundles') && in_array($key, $packages_array) && $enabled == TRUE) {
      // Is enabled.
      $output[] = array(
        'atlas_item' => array(
          '#type' => 'markup',
          '#markup' => '<div class="bundle-enable atlas-add-bundle bundle-ready"><h2>' . $label . '</h2><br><p>For information on this and other bundles that require a request, visit <a href="http://colorado.edu/webcentral">Webcentral\'s page about bundle requests.</a></p><br><span class="pmm-actions btn btn-info" disabled ><i class="fa fa-check-circle"></i> Ready to use</span></div>',
        ),
      );
    }
  }
  return $output;
}
